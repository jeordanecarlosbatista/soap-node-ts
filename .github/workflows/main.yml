name: CI/CD

on:
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  NODE_VERSION: "16.*"
  ENV_STAGING: ${{ secrets.ENV_STAGING }}
  HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}
  HEROKU_EMAIL: ${{ secrets.HEROKU_EMAIL }}
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependecies
        run: npm install

      - name: Build artifacts
        run: npm run build
        
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: |
            dist
            Dockerfile
            package*.json
            !dist/**/*.md

  deploy-on-staging:
    name: Deployment
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: staging
      url: https://fashion-delivery.herokuapp.com/api-docs
    steps:          
        - name: Download a Build Artifact
          uses: actions/download-artifact@v2.0.10
          with:
            name: artifact
            path: .
          
        - name: Build env file
          run: |
           echo "${{env.ENV_STAGING }}" > .env
           cat .env
          
        - name: Build, Push and Release a Docker container to Heroku.
          uses: gonuit/heroku-docker-deploy@v1.3.3 # GitHub action name (leave it as it is).
          with:
            email: ${{ env.HEROKU_EMAIL }}
            heroku_api_key: ${{ env.HEROKU_API_KEY }}
            heroku_app_name: ${{ env.HEROKU_APP_NAME }}
            dockerfile_directory: .
            dockerfile_name: Dockerfile
            docker_options: "--no-cache"
            process_type: web
